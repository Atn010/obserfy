version: 2.1
jobs:
  e2e:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - e2e-{{ checksum "frontend/yarn.lock" }}
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: |
          nvm install v12
          node -v
          nvm alias default v12
      - run: npm install -g yarn
      - run: |
          cd ./docker/postgres/ssl
          ./generate.sh
          cd ../../../
          docker-compose up -d
      - run: |
          cd frontend
          yarn install --production --frozen-lockfile
      - run: |
          cd frontend
          yarn cy:ci
      - run:  bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: frontend/coverage/clover.xml
      - store_artifacts:
          path:  ~/repo/frontend/cypress/videos
      - store_artifacts:
          path:  ~/repo/frontend/cypress/screenshots
      - save_cache:
          when: always
          name: Save Yarn Package Cache
          key: e2e-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - ./frontend/node_modules

  backend_unit:
    docker:
      - image: golang:1.13
      - image: circleci/postgres:11
        environment:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB:  defaultdb
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - backend-{{ checksum "go.sum" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: |
          mkdir test_result
          mkdir test_result/go
          go get gotest.tools/gotestsum
          PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
          gotestsum --junitfile test_result/go/gotestsum-report.xml -- $PACKAGE_NAMES -v -coverprofile=coverage.txt -covermode=atomic -coverpkg ./...
      - run:  bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test_result
      - save_cache:
          when: always
          name: Save Yarn Package Cache
          key: backend-{{ checksum "go.sum" }}
          paths:
            - /go/pkg

  frontend_unit:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - frontend-{{ checksum "frontend/yarn.lock" }}
      - run: |
          cd frontend
          yarn install
      - run: |
          cd frontend
          yarn build && yarn test -w 1
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: frontend/coverage/clover.xml
      - save_cache:
          when: always
          name: Save Yarn Package Cache
          key: frontend-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - ./frontend/node_modules

  frontend_lint:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - lint-{{ checksum "frontend/yarn.lock" }}
      - run: |
          cd frontend
          yarn install
      - run: |
          cd frontend
          yarn lint
      - save_cache:
          when: always
          name: Save Yarn Package Cache
          key: lint-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - ./frontend/node_modules

  frontend_typecheck:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - typecheck-{{ checksum "frontend/yarn.lock" }}
      - run: |
          cd frontend
          yarn install
      - run: |
          cd frontend
          yarn typecheck
      - save_cache:
          when: always
          name: Save Yarn Package Cache
          key: typecheck-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - ./frontend/node_modules

workflows:
  test:
    jobs:
      - e2e
      - backend_unit
      - frontend_unit
      - frontend_lint
      - frontend_typecheck
